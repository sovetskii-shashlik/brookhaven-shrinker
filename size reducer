local player = game.Players.LocalPlayer
local screenGui = Instance.new("ScreenGui")
local button = Instance.new("TextButton")
local UserInputService = game:GetService("UserInputService")

-- Настройки кнопки
button.Size = UDim2.new(0, 100, 0, 50) -- начальный размер кнопки
button.Position = UDim2.new(0, 0, 0, 0) -- позиция кнопки в левом верхнем углу
button.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- зеленый цвет
button.BorderSizePixel = 2 -- размер окантовки
button.BorderColor3 = Color3.fromRGB(0, 0, 0) -- цвет окантовки
button.Text = "Status: Off"
button.Font = Enum.Font.SourceSans
button.TextSize = 24
button.Parent = screenGui

screenGui.Parent = player:WaitForChild("PlayerGui")

local isActive = false

local function toggleButton()
    isActive = not isActive -- переключаем состояние

    if isActive then
        button.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- красный цвет
        button.Text = "Status: On"

        local args = {
            [1] = "CharacterSizeDown",
            [2] = 10
        }
        game:GetService("ReplicatedStorage").RE:FindFirstChild("1Clothe1s"):FireServer(unpack(args))
    else
        button.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- зеленый цвет
        button.Text = "Status: Off"

        local args = {
            [1] = "CharacterSizeUp",
            [2] = 1
        }
        game:GetService("ReplicatedStorage").RE:FindFirstChild("1Clothe1s"):FireServer(unpack(args))

        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping) -- персонаж прыгает
        end
    end
end

button.MouseButton1Click:Connect(toggleButton) -- обработчик нажатия на кнопку
